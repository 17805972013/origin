版本控制
详情点击：https://www.cnblogs.com/smuxiaolei/p/7484678.html

**  创建一个仓库 **
git init

** 查看仓库当前状态 **
git status

**  创建一个文件夹/文件 **
touch day25.cc

** 将文件提交到暂存区 **
git add day25.cc 

** 创建版本号 **
git commit -m "版本1"

** 给文件随意添加内容后,比较文件新添加的内容 **
git diff day25.cc

** 再次将文件提交到暂存区并创建新的版本号 **
git add day25.cc
git commit -m "版本2"

** 将文件回退到上个版本 **
git reset --hard HEAD^
git reset --hard HEAD^^#回退两个版本
git reset --hard HEAD~100#回退100个版本

** 将文件回退到最新版本 **
git reflog #查看所有版本所对应的版本号
git reset --hard [版本号]

** 删除文件后撤销操作 **
rm -f day25.cc
git checkout -- day25.cc

** 查看所有版本 **
git log

** 查看最新版本 **
git log --oneline

** 远程仓库 **
** 1.创建SSH Key **
ssh-keygen -t rsa -C "1028573496@qq.com"
** 在github上创建一个仓库 **
** 添加元仓库 **
git remote add [github上元仓库URL]#关联一个远程库
** 把本地仓库推送到github元仓库上去 **
git push -u master
** 从远程库克隆 **
git clone [资源位置.git]

** 创建分支 **
#在版本回填退里，你已经知道，每次提交，Git都把它们串成一条时间线，这条时间线就是一个分支。
#截止到目前，只有一条时间线，在Git里，这个分支叫主分支，即master分支。HEAD严格来说不是指向提交，
#而是指向master，master才是指向提交的，所以，HEAD指向的就是当前分支。
** 创建并切换分支 **
git branch -b dev

** 查看当前分支 **
git branch
#当前分支前面会添加一个星号!!

** 切换分支master **
git checkout master

** 合并分支 **
git merge dev
#注：merge是将指定的分支合并到当前分支

** 删除分支 **
git branch -d dev#删除dev分支

** 查看远程库信息 **
git remote
git remote -v #详细信息

** 设置本地dev分支与远程origin/dev分支的链接 **
git branch --set-upstream dev origin/dev

** 推送到远程库 **
git push origin/dev
